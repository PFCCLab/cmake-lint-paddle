name: Unit Test

on:
  push:
    branches: [main]
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  unittest:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04, ubuntu-22.04]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13-dev"]
    name: unittest - Python ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up uv
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Set up uv
        if: ${{ matrix.os == 'windows-latest' }}
        run: irm https://astral.sh/uv/install.ps1 | iex
        shell: powershell

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize venv and install packages
        run: |
          just install

      - name: Run Unittest
        run: |
          just test
